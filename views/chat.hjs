<!DOCTYPE html>

<html>
  <head>
    <meta charset="UTF-8">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.1.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    <script src="/javascripts/chatVisualFunctions.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <title>Login JOnline</title>   
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <style>
      #chat{
        position: relative;
        width: 100%;
        float: left;
        min-height: 100%;
        height: 90%;
        overflow: auto;
      }
      
    </style>
   
  </head>
  <body onload="setSessionStorage('{{ token }}', '{{ actualUser }}');">
    <div class="container">
      <div class="page-header">
        <h1> JOnline <small> web chat </small></h1>
      </div>

      <div id="content" class="row" style="height:70%;">
        <div class="col-md-2"></div>
          <div id="chatContent" class="col-md-6 ">
            <div class="panel panel-success">
              <div class="panel-heading">
                CHAT
              </div>              
              <div id="hiddenM" style="display:none;">{{arrayMsg}} </div>
              <div id="chat" class="panel-body"></div> <!--Contenido del chat-->
            </div>
    <!--Formulario para mandar los mensajes-->
            <div>
              <form id="sendMessage" class="input-group" style="text-align:center; margin:0 auto;">
                <input id="message" name="message" class="form-control input-lg" type="text" autocomplete="off" >
                <span class="input-group-btn">
                  <button type="submit" class="btn btn-primary" ><i class="fa fa-location-arrow" style="font-size:20px;color:white"></i></button>
                  <button style="font-size:16px" class="btn btn-primary" ><i class="fa fa-folder-open"></i></button>
                </span>
              </form>
            </div>
          </div>
          <div class="col-md-2">
              <div class="panel panel-info">
                <div class="panel-heading"><i class="fa fa-circle" style="font-size:20px;color:green"></i>
                  USERS
                </div>
                <div id="hidden" style="display:none;">{{actualUser}} </div>
                <div class="panel-body" id="usersDiv" >
                  <ul id="users">
                  </ul>               
                </div>                                   
              </div>      
            </div>
      </div>      
    </div>
    <!--Codigo jquery para mandar los mensajes-->
    <script type="text/javascript">
      
             var socket = io.connect("http://localhost:3000");
             //Usuario conectado/ cliente
             var x = $("#hidden").html(); 
             //El usuario que se selecciona
             var reciever = ""; 
             //array de mensajes entre ambos sujetos
             var latestMessages = $('#hiddenM').html();
            
              jQuery(function($){
                
                //son nuestros divs que forman nuestro chat
                var $messageForm = $('#sendMessage');
                var $message = $('#message');
                var $chat =$('#chat'); 
                var $listUsers=$('#users'); //ul
                var $list = $('#usersDiv'); //div

                //Agrega mensajes al div de chat correspondiente
                function appendMessages(msg){
                  var date = moment(new Date(msg.date)).calendar();
                  var html = '<div class="small-11">' +'<blockquote><h6>' + msg.username + ':</h6>' + 
                           msg.message +'<cite>' + date + '</cite></blockquote>' + '</div>';
                  $chat.append(html);

                }
                //Evento para mostrar mensajes
                $listUsers.click(function(e){
                  e.preventDefault();
                  
                  reciever = e.target.parentNode.id;
                  alert(x + " " + reciever);
                  if(x!= '' && reciever!= ''){ //usuario y amigo chekeados
                    
                    $.ajax({
                      method :'GET',
                      url: '/Chat/'+ x +'&&' + reciever,
                      dataType: 'json',
                      contentType:'application/json; charset=UTF-8',
                      success : function(){
                        socket.emit('historial',latestMessages);
                        
                      },
                      error:function(){
                        
                      }
                    });
                  }
                }); 

                //se envía el mensaje al servidor con el nombre sendMessage
                $messageForm.submit(function(e){ 
                  e.preventDefault();
                  
                  if($message.val()!= '') {
                    $.ajax({
                      method: 'POST',
                      url: '/Chat', 
                      data: JSON.stringify({message: $message.val(), sender: window.sessionStorage.actualUser, token: window.sessionStorage.token}),
                      dataType: 'json',
                      contentType: 'application/json; charset=UTF-8',
                      success: function() {
                        socket.emit('sendMessage',$message.val());
                        $message.val('');  
                      }, error: function() {
                        console.error('error');
                        $message.val('');
                      }
                    });            
                  }
                });
                
                socket.on('sendMessage', function(data){
                    appendMessages(data);
                  });
                /**
               * Cuando el servidor envia la lista de usuarios conectados.
               * se reciben a través de este evento,
               * cada usuario se agrega a la lista de usuarios online
               * @param  users Array con usuarios conectados en el momento
               */
                socket.on('onlineUsers', function (users) {
                  console.log(users.length + ' users on');
                  $listUsers.html('');                  
                  for (let i=0; i<users.length; i++) 
                  {
                    let listOnlineUsers = '<li id="' + users[i] + '"><a href="/Chat/">'+users[i]+'</a></li>';
                    $listUsers.append(listOnlineUsers);
                  }
                  
                });
                /**
               * Listener para evento 'new user', el servidor lo emite
               * cuando un usuario se ha conectado
               * @param nuser el usuario recien conectado
               */
               socket.on('newUser', function (nuser) {
                  userLink = nuser;
                  var linuser = '<li id="'+ nuser +'" + name="' + nuser + '">'+ '<a href="/Chat/">' + nuser+'</a></li>';
                  $listUsers.append(linuser);
                });
      
                /**
               * Cada vez que un usuario se desconecta, debemos eliminarlo
               * de la lista de usuarios conectados, el servidor envia un mensaje
               * con este evento para informarnos sobre un usuario desconectado.
               * @param nuser El usuarios que se acaba de desconectar
               */
                socket.on('remove user', function (nuser) {
                  socket.emit('onlineUsers');
                  $('#' + nuser).remove();
                });
      
                /**
                 * Emitimos un evento de tipo 'coutput' cada vez
                 * que se presiona 'Enter' en el input  y enviamos
                 * su contenido como mensaje al servidor.
                 */
                 $message.keyup(function (evt) {
                  if (evt.keyCode === 13) {
                    var nmsg = {
                      username : x,
                      message : $message.val()
                    }
                    socket.emit('output', nmsg);
                    $message.val('');
                  }
                });


                /**
               * Cuando el servidor envia los ultimos mensajes registrados
               * se reciben a través de este evento.
               * Cada mensaje se agrega a la lista de mensajes en la vista
               * de la conversación.
               */               
               socket.on('historial', function (messages) {
                  for (var i = messages.length - 1; i >= 0; i--) {
                    appendMessages(messages[i]);
                  };
                });


                /**
               * Solicitamos al servidor la lista de usuarios conectados
               * en este momento.
               */
                socket.emit('onlineUsers');
      
                /**
               * Emitimos el evento 'new user' para que el servidor
               * informe a todos los usuarios que estamos en linea.
               */
                socket.emit('newUser', x);

                socket.emit('historial'); 
                
                
               
              });
          </script>
  </body>
</html>